name: "CI"

on:
    pull_request:
    push:
        branches:
            - 'master'

env:
    fail-fast: true
    TZ: "Europe/Paris"

jobs:
    composer-validate:
        name: "Composer validate (${{ matrix.php-version }})"

        runs-on: "ubuntu-latest"

        strategy:
            matrix:
                php-version:
                    - '7.2'

        steps:
            -
                name: "Checkout code"
                uses: "actions/checkout@v2"

            -
                name: "Install PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    coverage: "none"
                    php-version: "${{ matrix.php-version }}"

            -
                name: "Validate composer.json"
                run: "composer validate --strict --no-check-lock"

    coding-standards:
        needs:
            - "composer-validate"

        name: "Coding Standards (${{ matrix.php-version }})"

        runs-on: "ubuntu-latest"

        strategy:
            matrix:
                php-version:
                    - '7.2'

        steps:
            -
                name: "Checkout code"
                uses: "actions/checkout@v2"

            -
                name: "Install PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    coverage: "none"
                    php-version: "${{ matrix.php-version }}"

            -
                name: "Determine composer cache directory"
                id: "determine-composer-cache-directory"
                run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

            -
                name: "Cache dependencies installed with composer"
                uses: "actions/cache@v2"
                with:
                    path: "${{ steps.determine-composer-cache-directory.outputs.directory }}"
                    key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('composer.json') }}"
                    restore-keys: "php-${{ matrix.php-version }}-composer-"

            -
                name: "Install dependencies with composer"
                run: "composer install --no-interaction --no-progress --no-scripts"

            -
                name: "Run friendsofphp/php-cs-fixer"
                run: "vendor/bin/php-cs-fixer fix --dry-run --diff --verbose"

    phpstan:
        needs:
            - "composer-validate"

        name: "PHPStan (${{ matrix.php-version }})"

        runs-on: "ubuntu-latest"

        strategy:
            matrix:
                php-version:
                    - '7.2'

        steps:
            -
                name: "Checkout code"
                uses: "actions/checkout@v2"

            -
                name: "Install PHP"
                uses: "shivammathur/setup-php@v2"
                with:
                    coverage: "none"
                    php-version: "${{ matrix.php-version }}"

            -
                name: "Determine composer cache directory"
                id: "determine-composer-cache-directory"
                run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

            -
                name: "Cache dependencies installed with composer"
                uses: "actions/cache@v2"
                with:
                    path: "${{ steps.determine-composer-cache-directory.outputs.directory }}"
                    key: "php-${{ matrix.php-version }}-composer-${{ hashFiles('composer.json') }}"
                    restore-keys: "php-${{ matrix.php-version }}-composer-"

            -
                name: "Install dependencies with composer"
                run: "composer install --no-interaction --no-progress --no-scripts"

            -
                name: "Run phpstan/phpstan"
                run: "vendor/bin/phpstan analyse -c phpstan.neon.dist"
